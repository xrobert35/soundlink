{
  "version": 3,
  "file": "audioPlayer.js",
  "sources": [
    "audioPlayer/player/directives/repeat-music.directive.js",
    "audioPlayer/player/directives/remove-music.directive.js",
    "audioPlayer/player/directives/random-music.directive.js",
    "audioPlayer/player/directives/previous-music.directive.js",
    "audioPlayer/player/directives/position-controle.directive.js",
    "audioPlayer/player/directives/play-music.directive.js",
    "audioPlayer/player/directives/pause-music.directive.js",
    "audioPlayer/player/directives/next-music.directive.js",
    "audioPlayer/player/directives/add-play-music.directive.1.js",
    "audioPlayer/player/directives/add-music.directive.js",
    "audioPlayer/player/audioStatus.service.js",
    "audioPlayer/player/audioPlayer.service.js"
  ],
  "names": [],
  "mappings": "AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACz
  "sourcesContent": [
    "(function() {\n'use strict';\r\n\r\nangular.module(\"soundlink\").directive('repeatMusic', repeatMusicDirective);\r\n\r\nrepeatMusicDirective.$inject = ['audioPlayer'];\r\n\r\nfunction repeatMusicDirective(audioPlayer) {\r\n  return {\r\n    restrict: \"A\",\r\n    link: function (scope, element, attrs) {\r\n      element.bind('click', function (event) {\r\n        audioPlayer.repeat();\r\n      });\r\n    }\r\n  };\r\n}\n}());\n",
    "(function() {\n'use strict';\r\n\r\nangular.module(\"soundlink\").directive('removeMusic', removeMusicDirective);\r\n\r\nremoveMusicDirective.$inject = ['audioPlayer'];\r\n\r\nfunction removeMusicDirective(audioPlayer) {\r\n  return {\r\n    restrict: \"A\",\r\n    scope: {\r\n      song: '=removeMusic'\r\n    },\r\n    link: function (scope, element, attrs) {\r\n      element.bind('click', function (event) {\r\n        audioPlayer.remove(scope.song);\r\n      });\r\n    }\r\n  };\r\n}\n}());\n",
    "(function() {\n'use strict';\r\n\r\nangular.module(\"soundlink\").directive('randomMusic', randomMusicDirective);\r\n\r\nrandomMusicDirective.$inject = ['audioPlayer'];\r\n\r\nfunction randomMusicDirective(audioPlayer) {\r\n  return {\r\n    restrict: \"A\",\r\n    link: function (scope, element, attrs) {\r\n      element.bind('click', function (event) {\r\n        audioPlayer.random();\r\n      });\r\n    }\r\n  };\r\n}\n}());\n",
    "(function() {\n'use strict';\r\n\r\nangular.module(\"soundlink\").directive('previousMusic', previousMusicDirective);\r\n\r\npreviousMusicDirective.$inject = ['audioPlayer'];\r\n\r\nfunction previousMusicDirective(audioPlayer) {\r\n    return {\r\n        restrict: \"A\",\r\n        link: function (scope, element, attrs) {\r\n            element.bind('click', function (event) {\r\n                audioPlayer.previous();\r\n            });\r\n        }\r\n    };\r\n}\n}());\n",
    "(function() {\n'use strict';\r\n\r\nangular.module(\"soundlink\").directive('positionControle', nextMusicDirective);\r\n\r\nnextMusicDirective.$inject = ['audioPlayer'];\r\n\r\nfunction nextMusicDirective(audioPlayer) {\r\n  return {\r\n    restrict: \"A\",\r\n    link: function (scope, element, attrs) {\r\n\r\n      function getXOffset(event) {\r\n        var x = 0, element = event.target;\r\n        while (element && !isNaN(element.offsetLeft) && !isNaN(element.offsetTop)) {\r\n          x += element.offsetLeft - element.scrollLeft;\r\n          element = element.offsetParent;\r\n        }\r\n        return event.clientX - x;\r\n      }\r\n\r\n      element.bind('click', function (event) {\r\n          var mouseX =  getXOffset(event);\r\n          var clientWidth = event.target.clientWidth;\r\n          var position = (mouseX / clientWidth) * 100;\r\n          audioPlayer.setAudioPosition(position);\r\n      });\r\n    }\r\n  };\r\n}\n}());\n",
    "(function() {\n'use strict';\r\n\r\nangular.module(\"soundlink\").directive('playMusic', playMusicDirective);\r\n\r\nplayMusicDirective.$inject = ['audioPlayer'];\r\n\r\nfunction playMusicDirective(audioPlayer) {\r\n  return {\r\n    restrict: \"EA\",\r\n    scope: {\r\n      song: '=playMusic'\r\n    },\r\n    link: function (scope, element, attrs) {\r\n      element.bind('click', function (event) {\r\n        if (scope.song !== null) {\r\n          audioPlayer.play(scope.song);\r\n        }else{\r\n          audioPlayer.play();\r\n        }\r\n      });\r\n    }\r\n  };\r\n}\n}());\n",
    "(function() {\n'use strict';\r\n\r\nangular.module(\"soundlink\").directive('pauseMusic', pauseMusicDirective);\r\n\r\npauseMusicDirective.$inject = ['audioPlayer'];\r\n\r\nfunction pauseMusicDirective(audioPlayer) {\r\n    return {\r\n        restrict: \"A\",\r\n        link: function (scope, element, attrs) {\r\n            element.bind('click', function (event) {\r\n                audioPlayer.pause();\r\n            });\r\n        }\r\n    };\r\n}\n}());\n",
    "(function() {\n'use strict';\r\n\r\nangular.module(\"soundlink\").directive('nextMusic', nextMusicDirective);\r\n\r\nnextMusicDirective.$inject = ['audioPlayer'];\r\n\r\nfunction nextMusicDirective(audioPlayer) {\r\n  return {\r\n    restrict: \"A\",\r\n    link: function (scope, element, attrs) {\r\n      element.bind('click', function (event) {\r\n        audioPlayer.next(scope.song);\r\n      });\r\n    }\r\n  };\r\n}\n}());\n",
    "(function() {\n'use strict';\r\n\r\nangular.module(\"soundlink\").directive('addPlayMusic', addPlayMusicDirective);\r\n\r\naddPlayMusicDirective.$inject = ['audioPlayer'];\r\n\r\nfunction addPlayMusicDirective(audioPlayer) {\r\n  return {\r\n    restrict: \"EA\",\r\n    scope: {\r\n      song: '=addPlayMusic'\r\n    },\r\n    link: function (scope, element, attrs) {\r\n      element.bind('click', function (event) {\r\n          audioPlayer.add(scope.song);\r\n          audioPlayer.play(scope.song);\r\n      });\r\n    }\r\n  };\r\n}\n}());\n",
    "(function() {\n'use strict';\r\n\r\nangular.module(\"soundlink\").directive('addMusic', addMusicDirective);\r\n\r\naddMusicDirective.$inject = ['audioPlayer', 'eventManager'];\r\n\r\nfunction addMusicDirective(audioPlayer, eventManager) {\r\n  return {\r\n    restrict: \"EA\",\r\n    scope: {\r\n      song: '=addMusic'\r\n    },\r\n    link: function (scope, element, attrs) {\r\n      element.bind('click', function (event) {\r\n        audioPlayer.add(scope.song);\r\n        eventManager.fireEvent(\"playlistOpen\");\r\n      });\r\n    }\r\n  };\r\n}\n}());\n",
    "(function() {\n'use strict';\r\n\r\nangular.module('soundlink').factory(\"audioStatus\", audioStatus);\r\n\r\naudioStatus.$inject = [];\r\n\r\nfunction audioStatus() {\r\n\r\n  var progress = 0;\r\n  var duration = 0;\r\n  var volume = 0;\r\n  var currentSong;\r\n  var playing = false;\r\n  var repeating = false;\r\n\r\n  var loadingPercent = 0;\r\n  var playlist = [];\r\n\r\n  var contenu = {};\r\n\r\n  contenu.isPlaying = function () {\r\n    return playing;\r\n  };\r\n\r\n  contenu.setPlaying = function (pPlaying) {\r\n    playing = pPlaying;\r\n  };\r\n\r\n  contenu.isRepeating = function (){\r\n    return repeating;\r\n  };\r\n\r\n  contenu.setRepeating = function (pRepeating){\r\n    repeating = pRepeating;\r\n  };\r\n\r\n  contenu.setVolume = function (pVolume){\r\n    volume = pVolume;\r\n  };\r\n\r\n  contenu.getVolume = function (){\r\n    return volume;\r\n  };\r\n\r\n  contenu.setDuration = function (pDuration) {\r\n    duration = pDuration;\r\n  };\r\n\r\n  contenu.getDuration = function () {\r\n    return duration;\r\n  };\r\n\r\n  contenu.setProgress = function (pProgress) {\r\n    progress = pProgress;\r\n  };\r\n\r\n  contenu.getProgress = function () {\r\n    return progress;\r\n  };\r\n\r\n  contenu.setCurrentSong = function (pCurrentSong) {\r\n    currentSong = pCurrentSong;\r\n  };\r\n\r\n  contenu.getCurrentSong = function () {\r\n    return currentSong;\r\n  };\r\n\r\n  contenu.setPlaylist = function (pPlaylist) {\r\n    playlist = pPlaylist;\r\n  };\r\n\r\n  contenu.getPlaylist = function () {\r\n    return playlist;\r\n  };\r\n\r\n  contenu.setLoadingPercent = function (percent) {\r\n    loadingPercent = percent;\r\n  };\r\n\r\n  contenu.getLoadingPercent = function () {\r\n    return loadingPercent;\r\n  };\r\n\r\n  return contenu;\r\n\r\n}\n}());\n",
    "(function() {\n'use strict';\r\n\r\nangular.module('soundlink').service(\"audioPlayer\", audioPlayer);\r\n\r\naudioPlayer.$inject = ['audioStatus', '$q', '$cookies', 'tokenStorage', 'config', '$timeout', \"$rootScope\"];\r\n\r\nfunction audioPlayer(audioStatus, $q, $cookies, tokenStorage, config, $timeout, $rootScope) {\r\n\r\n  var audioPlayer = this;\r\n  var player;\r\n\r\n  audioPlayer.setVolume = function (volume) {\r\n    audioStatus.setVolume(volume);\r\n    if (player != null) {\r\n      player.volume = volume;\r\n    }\r\n  };\r\n\r\n  audioPlayer.setAudioPosition = function (positionInPercent) {\r\n    var time = (audioStatus.getDuration() * positionInPercent) / 100;\r\n    if (player != null) {\r\n      player.seek(time);\r\n    }\r\n  };\r\n\r\n  audioPlayer.add = function (song) {\r\n    if (audioStatus.getPlaylist().indexOf(song) == -1) {\r\n      audioStatus.getPlaylist().push(song);\r\n    }\r\n  };\r\n\r\n  audioPlayer.play = function (song) {\r\n    var currentSong = audioStatus.getCurrentSong();\r\n    if (song != null) {\r\n      if(currentSong != null && song.id == currentSong.id){\r\n        player.play();\r\n        audioPlayer.setAudioPosition(0);\r\n      }else {\r\n        if (player != null) {\r\n          player.stop();\r\n        }\r\n        playSong(song);\r\n      }\r\n    } else if (player != null && currentSong != null) {\r\n      player.play();\r\n      audioStatus.setPlaying(true);\r\n    } else if (audioStatus.getPlaylist().length > 0) {\r\n      playSong(audioStatus.getPlaylist()[0]);\r\n    }\r\n  };\r\n\r\n  function playSong(song) {\r\n    $q.when(song).then(function () {\r\n      audioStatus.setCurrentSong(song);\r\n      audioStatus.setPlaying(true);\r\n      audioStatus.setProgress(0);\r\n    });\r\n    // player = AV.Player.fromURL(song.url);\r\n    $cookies.put('X-AUTH-TOKEN', tokenStorage.retrieve(), { path: '/soundlink_server', domain: config.wsDomain });\r\n    player = AV.Player.fromWebSocket(config.wsServeurUrl + \"ws/music\", song.id);\r\n\r\n    managePlayerEvent();\r\n    player.play();\r\n  }\r\n\r\n  audioPlayer.pause = function () {\r\n    if (player != null) {\r\n      player.pause();\r\n      audioStatus.setPlaying(false);\r\n    }\r\n  };\r\n\r\n  audioPlayer.continue = function () {\r\n    if (player != null) {\r\n      player.play();\r\n      audioStatus.setPlaying(true);\r\n    }\r\n  };\r\n\r\n  audioPlayer.repeat = function () {\r\n    audioStatus.setRepeating(!audioStatus.isRepeating());\r\n  };\r\n\r\n  audioPlayer.random = function () {\r\n\r\n  };\r\n\r\n  audioPlayer.previous = function () {\r\n    var currentSong = audioStatus.getCurrentSong();\r\n    if (currentSong != null) {\r\n      var playlist = audioStatus.getPlaylist();\r\n      var nextSongIndex = playlist.indexOf(currentSong) -1;\r\n      if (nextSongIndex >= 0 ) {\r\n        var song = playlist[nextSongIndex];\r\n        audioPlayer.play(song);\r\n      }\r\n    }\r\n  };\r\n\r\n  audioPlayer.next = function () {\r\n    var currentSong = audioStatus.getCurrentSong();\r\n    if (currentSong != null) {\r\n      var playlist = audioStatus.getPlaylist();\r\n      var nextSongIndex = playlist.indexOf(currentSong) + 1;\r\n      if (playlist.length > nextSongIndex) {\r\n        audioPlayer.play(playlist[nextSongIndex]);\r\n      }else if(audioStatus.isRepeating()){\r\n        audioPlayer.play(playlist[0]);\r\n      }\r\n    }\r\n  };\r\n\r\n  function managePlayerEvent() {\r\n    player.volume = audioStatus.getVolume();\r\n    player.on('ready', function () {\r\n      player.play();\r\n    });\r\n\r\n    player.on('end', function () {\r\n      audioStatus.setProgress(100);\r\n      $rootScope.$apply();\r\n      audioPlayer.next();\r\n    });\r\n    player.on('error', function (err, code, toto) {\r\n      if (err.message === 'Invalid sync code') {\r\n        //probleme de desynchro à la fin de certain fichier flac\r\n        player.stop();\r\n        audioStatus.setProgress(100);\r\n        $rootScope.$apply();\r\n        audioPlayer.next();\r\n      }\r\n      console.log(err + ' ' + audioStatus.getCurrentSong().title);\r\n    });\r\n    player.on('progress', function (progress) {\r\n      audioStatus.setProgress((progress / audioStatus.getDuration()) * 100);\r\n      $rootScope.$apply();\r\n    });\r\n    player.on('duration', function (pDuration) {\r\n      audioStatus.setDuration(pDuration);\r\n      $rootScope.$apply();\r\n    });\r\n    player.on('buffer', function (percent) {\r\n      audioStatus.setLoadingPercent(percent);\r\n      $rootScope.$apply();\r\n    });\r\n  }\r\n}\n}());\n"
  ]
}